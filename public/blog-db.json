[
    {
        "id" : 1,
        "title" : "Authorization VS Authentication",
        "description" : "Authentication is the process of verifying who someone is, whereas authorization is the process of verifying what specific applications, files, and data a user has access to. The situation is like that of an airline that needs to determine which people can come on board. The first step is to confirm the identity of a passenger to make sure they are who they say they are. Once a passenger’s identity has been determined, the second step is verifying any special services the passenger has access to, whether it’s flying first-class or visiting the VIP lounge. In the digital world, authentication and authorization accomplish these same goals. Authentication is used to verify that users really are who they represent themselves to be. Once this has been confirmed, authorization is then used to grant the user permission to access different levels of information and perform specific functions, depending on the rules established for different types of users.",
        "image": "https://i.ibb.co/4V3VPsp/authorization-vs-authentication.png"
    },
    {
        "id" : 2,
        "title" : "Why We are using Firebase? What other options do we have to implement authentication?",
        "description" : "According to Firebase console, the application SDKs provided by this toolkit, directly interact with backend services. Therefore, there is no need to establish any connection between the app and the service. So, if you operate one of the Firebase database options, you typically write code to query the database in the app. This is distinct from traditional app development. The traditional app development process requires writing both frontend and backend software. The frontend code just implements the API endpoints exposed by the backend, and the backend code actually does the work. However, with Firebase products, traditional backend development is bypassed, putting the work into the client. The Firebase database offers so many services due to which it has great potential, so that it may easily replace custom backend development depending on the product development stage and the final goal (whether the product is built to engage active users or you need an MVP or a prototype). If you need to achieve a proof of concept with minimal resources, then Firebase is a good choice because it's free for a number of users and is preferable for the beginning. You may control the system and make changes while adapting the market, and later it may be easily converted into a customized backend. Its features include Authentication, Cloud Firestore, Firebase Analytics, App Indexing, Hosting, Cloud Messaging, and many more modules. As for this time, let’s analyze the most essential features of Firebase and discover the reasons why to choose this platform for application development. Below we’ll together investigate 3 critical points of Firebase: Authentication, Cloud Firestore, and Analytics.",
        "image": "https://i.ibb.co/zsgxF3H/firebase.png"
    }
]
